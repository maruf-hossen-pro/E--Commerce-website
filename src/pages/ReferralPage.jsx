import React, { useState, useEffect } from 'react';
import { Helmet } from 'react-helmet';
import { useNavigate } from 'react-router-dom';
import { motion } from 'framer-motion';
import { Button } from '@/components/ui/button';
import { toast } from '@/components/ui/use-toast';
import { CheckCircle, Copy, Gift, Star, ShieldCheck } from 'lucide-react';

const MembershipCard = ({ plan, onBuyNow }) => {
  return (
    <motion.div
      whileHover={{ scale: 1.05 }}
      className="bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition flex flex-col h-full"
    >
      <h3 className="text-2xl font-bold text-gray-800 mb-4 text-center">{plan.name}</h3>
      <p className="text-4xl font-extrabold text-center my-4">
        {plan.price}
        <span className="text-base font-medium text-gray-500">/ржорж╛рж╕</span>
      </p>
      <ul className="space-y-3 mb-8 flex-grow">
        {plan.benefits.map((benefit, index) => (
          <li key={index} className="flex items-start">
            <CheckCircle className="w-5 h-5 text-green-500 mr-3 mt-1 flex-shrink-0" />
            <span>{benefit}</span>
          </li>
        ))}
      </ul>
      <Button 
        onClick={() => onBuyNow(plan)} 
        size="lg" 
        className="w-full bg-orange-500 hover:bg-orange-600 text-white font-semibold py-3 px-6 rounded-xl"
      >
        ржПржЦржиржЗ ржХрж┐ржирзБржи
      </Button>
    </motion.div>
  );
};

const ReferralPage = () => {
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const navigate = useNavigate();

  useEffect(() => {
    const user = localStorage.getItem('isLoggedIn');
    setIsLoggedIn(!!user);
  }, []);

  const handleBuyNow = (plan) => {
    if (!isLoggedIn) {
      navigate('/login?redirect=/membership');
    } else {
      toast({
        title: `ЁЯЪА ${plan.name} ржПрж░ ржЬржирзНржп ржЪрзЗржХржЖржЙржЯрзЗ ржПржЧрж┐ржпрж╝рзЗ ржпрж╛ржУржпрж╝рж╛ рж╣ржЪрзНржЫрзЗ!`,
        description: "ржкрзЗржорзЗржирзНржЯ ржЗржирзНржЯрж┐ржЧрзНрж░рзЗрж╢ржи ржкрж░ржмрж░рзНрждрзА ржзрж╛ржкред",
      });
    }
  };
  
  const copyLink = () => {
    navigator.clipboard.writeText("https://letdropship.com/ref/USER123");
    toast({ title: "тЬЕ рж▓рж┐ржЩрзНржХ ржХржкрж┐ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ!" });
  }

  const membershipPlans = [
    {
      name: "ржмрзЗрж╕рж┐ржХ ржорзЗржорзНржмрж╛рж░",
      price: "рз│рззрзпрзп",
      benefits: [
        "ржкрзНрж░рждрж┐ рж░рзЗржлрж╛рж░рзЗрж▓рзЗ рз│рззрзж",
        "рж░рзЗржлрж╛рж░рзЗрж▓ ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржб ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕",
        "рж╕рзАржорж┐ржд рж╕рж╛ржкрзЛрж░рзНржЯ",
      ],
    },
    {
      name: "ржкрзНрж░рзЛ рж╕рзЗрж▓рж╛рж░",
      price: "рз│рзйрзпрзп",
      benefits: [
        "ржкрзНрж░рждрж┐ рж░рзЗржлрж╛рж░рзЗрж▓рзЗ рз│рзирзл",
        "ржЕржЧрзНрж░рж╛ржзрж┐ржХрж╛рж░ рж╢рж┐ржкрж┐ржВ",
        "ржкрзНрж░рзЛржлрж╛ржЗрж▓рзЗ ржкрзНрж░рзЛ ржмрзНржпрж╛ржЬ",
      ],
    },
    {
      name: "ржкрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо ржкрж╛рж░рзНржЯржирж╛рж░",
      price: "рз│рзнрзпрзп",
      benefits: [
        "ржкрзНрж░рждрж┐ рж░рзЗржлрж╛рж░рзЗрж▓рзЗ рз│рзлрзж",
        "ржкрзНрж░рждрж┐ рззрзжржЯрж┐ рж░рзЗржлрж╛рж░рзЗрж▓рзЗ ржмрж┐ржирж╛ржорзВрж▓рзНржпрзЗ ржЧрж┐ржлржЯ ржмржХрзНрж╕",
        "ржкрж╛рж░рзНржЯржирж╛рж░ ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржб ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕",
        "рж╕рж░рзНржмрзЛржЪрзНржЪ ржЕржЧрзНрж░рж╛ржзрж┐ржХрж╛рж░ рж╕рж╛ржкрзЛрж░рзНржЯ",
      ],
    },
  ];

  return (
    <>
      <Helmet>
        <title>ржЖржорж╛ржжрзЗрж░ ржорзЗржорзНржмрж╛рж░рж╢рж┐ржкрзЗ ржпрзЛржЧ ржжрж┐ржи тАУ LetsDropship</title>
        <meta name="description" content="ржЖржкржирж╛рж░ ржорзЗржорзНржмрж╛рж░рж╢рж┐ржк ржкрзНрж▓рзНржпрж╛ржи ржмрзЗржЫрзЗ ржирж┐ржи ржПржмржВ ржПржХрзНрж╕ржХрзНрж▓рзБрж╕рж┐ржн ржкрзБрж░рж╕рзНржХрж╛рж░ ржЖржирж▓ржХ ржХрж░рзБржиред" />
      </Helmet>
      
      <div className="bg-slate-50 min-h-screen py-12">
        <div className="max-w-7xl mx-auto px-4">
          <section className="text-center p-8 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-xl shadow-lg mb-16">
            <h1 className="text-4xl font-bold">рж░рзЗржлрж╛рж░ ржХрж░рзБржи ржПржмржВ ржЖрзЯ ржХрж░рзБржи тАУ ржнрж┐ржЖржЗржкрж┐ рж╕ржжрж╕рзНржп рж╣ржи</h1>
            <p className="mt-2 text-lg">ржЖржкржирж╛рж░ ржорзЗржорзНржмрж╛рж░рж╢рж┐ржк ржкрзНрж▓рзНржпрж╛ржи ржмрзЗржЫрзЗ ржирж┐ржи ржПржмржВ ржПржХрзНрж╕ржХрзНрж▓рзБрж╕рж┐ржн ржкрзБрж░рж╕рзНржХрж╛рж░ ржЖржирж▓ржХ ржХрж░рзБржиред</p>
          </section>

          <section className="mb-16">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              {membershipPlans.map((plan, index) => (
                <MembershipCard key={index} plan={plan} onBuyNow={handleBuyNow} />
              ))}
            </div>
          </section>

          <section className="mb-16 bg-white p-8 rounded-xl shadow-lg">
            <h2 className="text-3xl font-bold text-gray-800 text-center mb-4">ржХрзЗржи рж╕ржжрж╕рзНржп рж╣ржмрзЗржи?</h2>
            <p className="text-center text-gray-600 max-w-3xl mx-auto mb-8">
              ржЖржорж╛ржжрзЗрж░ ржорзЗржорзНржмрж╛рж░рж╢рж┐ржк ржкрзНрж░рзЛржЧрзНрж░рж╛ржоржЯрж┐ ржЖржкржирж╛ржХрзЗ ржЖржкржирж╛рж░ ржбрзНрж░ржкрж╢рж┐ржкрж┐ржВ ржмрзНржпржмрж╕рж╛ ржжрзНрж░рзБржд ржмрж╛ржбрж╝рж╛рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рж╛рж░ ржЬржирзНржп ржбрж┐ржЬрж╛ржЗржи ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред ржЙржЪрзНржЪрждрж░ ржЙржкрж╛рж░рзНржЬржи, ржЙржирзНржиржд рж╕рж╛ржкрзЛрж░рзНржЯ ржПржмржВ ржПржХрзНрж╕ржХрзНрж▓рзБрж╕рж┐ржн рж╕рзБржмрж┐ржзрж╛ ржкрж╛ржи ржпрж╛ ржЖржкржирж╛ржХрзЗ рж╕рж╛ржлрж▓рзНржпрзЗрж░ ржЬржирзНржп ржкрзНрж░рж╕рзНрждрзБржд ржХрж░рзЗред
            </p>
            <div className="grid md:grid-cols-3 gap-8 text-center">
                <div className="flex flex-col items-center">
                    <Star className="w-10 h-10 text-orange-500 mb-3" />
                    <h3 className="font-semibold text-lg">ржмржбрж╝ ржкрзБрж░рж╕рзНржХрж╛рж░</h3>
                    <p className="text-gray-600">ржЖржкржирж╛рж░ ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржлрж▓ рж░рзЗржлрж╛рж░рзЗрж▓рзЗрж░ ржЬржирзНржп ржЖрж░ржУ ржмрзЗрж╢рж┐ ржиржЧржж ржЙржкрж╛рж░рзНржЬржи ржХрж░рзБржиред</p>
                </div>
                <div className="flex flex-col items-center">
                    <Gift className="w-10 h-10 text-orange-500 mb-3" />
                    <h3 className="font-semibold text-lg">ржПржХрзНрж╕ржХрзНрж▓рзБрж╕рж┐ржн рж╕рзБржмрж┐ржзрж╛</h3>
                    <p className="text-gray-600">ржмрж┐рж╢рзЗрж╖ ржЧрж┐ржлржЯ ржмржХрзНрж╕, ржЕржЧрзНрж░рж╛ржзрж┐ржХрж╛рж░ рж╢рж┐ржкрж┐ржВ ржПржмржВ ржЖрж░ржУ ржЕржирзЗржХ ржХрж┐ржЫрзБ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржХрж░рзБржиред</p>
                </div>
                <div className="flex flex-col items-center">
                    <ShieldCheck className="w-10 h-10 text-orange-500 mb-3" />
                    <h3 className="font-semibold text-lg">ржЕржЧрзНрж░рж╛ржзрж┐ржХрж╛рж░ рж╕рж╛ржкрзЛрж░рзНржЯ</h3>
                    <p className="text-gray-600">ржЖржорж╛ржжрзЗрж░ ржирж┐ржмрзЗржжрж┐ржд рж╕рж╛ржкрзЛрж░рзНржЯрзЗрж░ ржорж╛ржзрзНржпржорзЗ ржЖржкржирж╛рж░ ржкрзНрж░рж╢рзНржирзЗрж░ ржЙрждрзНрждрж░ ржжрзНрж░рзБржд ржкрж╛ржиред</p>
                </div>
            </div>
          </section>

          {isLoggedIn && (
            <section className="bg-white p-8 rounded-xl shadow-lg">
              <h2 className="text-3xl font-bold text-gray-800 text-center mb-4">ржЖржкржирж╛рж░ рж░рзЗржлрж╛рж░рзЗрж▓ рж▓рж┐ржЩрзНржХ</h2>
              <p className="text-center text-gray-600 max-w-2xl mx-auto mb-6">ржЖржЬржЗ ржкрзБрж░рж╕рзНржХрж╛рж░ ржЙржкрж╛рж░рзНржЬржи рж╢рзБрж░рзБ ржХрж░рждрзЗ ржЖржкржирж╛рж░ ржмржирзНржзрзБржжрзЗрж░ рж╕рж╛ржерзЗ ржПржЗ рж▓рж┐ржЩрзНржХржЯрж┐ рж╢рзЗржпрж╝рж╛рж░ ржХрж░рзБржи!</p>
              <div className="relative flex items-center max-w-lg mx-auto">
                <input type="text" readOnly value="https://letdropship.com/ref/USER123" className="w-full bg-slate-100 border border-gray-300 rounded-xl p-3 pr-28 text-gray-500"/>
                <Button onClick={copyLink} className="absolute right-2 top-1/2 -translate-y-1/2" size="sm"><Copy className="w-4 h-4 mr-2"/> ржХржкрж┐</Button>
              </div>
            </section>
          )}
        </div>
      </div>
    </>
  );
};

export default ReferralPage;